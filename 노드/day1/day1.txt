node.js 버전 확인
cmd 창에서 node -v 명령어로 확인

npm 버전 확인 
cmd 창에서 npm -v 명령어로 확인


package.json 파일 만들기
모듈을 관리하는 설정파일
npm init : 옵션을 직접 제공
npm init -y : 기본값을 기준으로 바로 생성

node 중지 : ctrl +d
node안에서 모듈 패키지에서 중지하고 싶을떄는 ctrl + c

/*
node.js : 필요한것들을 준비
json : 데이터베이스를 공유할 수 있는 언어

FileSystem 모듈 
파일처리와 관련된 모듈
node.js에서 가장 중요하고 기초가 되는 모듈

----명령어-----------
node.js 실행 : 
node 파일명

메소드
readFile() : 파일을 비동기적으로 읽음.
readFileSync()  : 파일을 동기적으로 읽음.
writeFile()  : 파일을 비동기적으로 씀
writeFileSync  : 파일을 동기적으로 씀.


예외처리 (Exception)
프로그램이 실행되고 있는 런타임시에에러가 발생할 경우 처리할 수 있는 구간을 의미

try{
    예외상황이 발생할 수 있는 문장
    ....
    ....
}catch(e){
    예외 상황이 발생했을 경우 처리할문장(e는 Exception 객체)
}finally{
    예외 상황이 발생하거나 발생하지 않아도 무조건 실행될 문장(생략가능)
}


이벤트 루프(Event Loop)
node.js는 서버가 가동되면 변수들을 초기화하고 함수를 선언하고 이벤트가 발생할 때 까지 기다립니다.
이벤트가 감지되었을 때, call back 함수를 호출합니다.

events
이벤트 위주의 프로그램을 작성할 때 사용하는 모듈입니다.

메소드
on(): 지정한 이벤트의리스너를 추가합니다. 
once()  : 지정한 이벤트 리스너를 추가하지만 한번 실행이후 자동 제거됨.
removelistener() : 지정한 이벤트에 대한 리스너를 제거합니다.
emit() : 지정한 이벤트를 발생시킵니다.

시스템 이벤트
process 객체는 노드에서 항상 사용할 수 있는 객체입니다. on()과 emit() 메소드는 객체를 생성하거나 모듈을 가져오지 않아도 바로 사용할 수 있습니다.
on() 메소드를 호출하면서 이벤트 이름을 exit로 지정하면 내부적으로 프로세스가 끝날때를 알 수 있습니다.

http 모듈
node.js에서 가장 기본적이고 중요한 서버모듈.
HTTP 웹서버를 생성하는것과 관련된 모든 기능을 담당.

1.Server 객체
http 모듈의 createServer() 메소드를 사용하여 server 객체를 생성.

메소드
listen(): 서버를 실행하고 클라이언트를 기다립니다.
close(): 서버를 종료합니다.

이벤트
request : 클라이언트가 서버에 요청할 떄 발생하는 이벤트입니다.
connection : 클라이언트가 접속할때 발생하는 이벤트입니다.
close : 서버 종료.

2.request 객체
클라이언트가 서버에 전달하는메세지를 담는 객체.

속성 
method : 클라이언트 요청방식. (GET, POST)
url:클라이언트가 요청한 url을 나타냄.



*/